name: pipeline

on:
  pull_request:
  push:
    branches: [master]

jobs:
  test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        pymc-version: ["without", "'pymc>=5.0.0'"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: environment-dev.yml
        create-args: >-
          python=${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        conda activate murefi-env
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --statistics
    - name: Test without PyMC
      if: matrix.pymc-version == 'without'
      run: |
        pytest --cov=./murefi --cov-append --cov-report xml --cov-report term-missing murefi/tests.py
    - name: Install and test with PyMC
      if: matrix.pymc-version != 'without'
      run: |
        pip install ${{ matrix.pymc-version }}
        pytest --cov=./murefi --cov-append --cov-report xml --cov-report term-missing murefi/tests.py
    - name: Install and test with sunode
      if: matrix.pymc-version != 'without'
      run : |
        mamba install "sunode>=0.5.0"
        pytest --cov=./murefi --cov-append --cov-report xml --cov-report term-missing murefi/tests.py
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      if: matrix.python-version == 3.11
      with:
        file: ./coverage.xml
    - name: Test Wheel install and import
      run: |
        python setup.py bdist_wheel
        cd dist
        pip install murefi*.whl
        python -c "import murefi; print(murefi.__version__)"
